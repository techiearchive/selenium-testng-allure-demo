name: Run Selenium Tests and Upload s3 signed bucket

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    
  workflow_dispatch:

jobs:
  execute-selenium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

#      - name: Set up Maven
#        uses: s4u/setup-maven-action@v1.12.0
#        with:
#          maven-version: '3.9.6'
          
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest


      - name: Run Selenium Tests with Maven
        run: mvn clean test
        
      - name: Upload Allure JSON results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Install Allure CLI
        run: |
          curl -o allure.tgz -L https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
          mkdir -p allure
          tar -zxvf allure.tgz -C allure --strip-components=1
          echo "$(pwd)/allure/bin" >> $GITHUB_PATH

      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report
          ls -l allure-report
      
      - name: Upload Allure Report to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ vars.S3_BUCKET_NAME01 }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          SOURCE_DIR: ./allure-report
          
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ vars.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ vars.AWS_REGION }}
       
      - name: Generate Signed URL
        run: |
          url=$(aws s3 presign s3://${{ vars.S3_BUCKET_NAME01 }}/index.html --expires-in 1800)
          echo "Signed URL (valid 30 min): $url"
        env:
          AWS_S3_BUCKET: ${{ vars.S3_BUCKET_NAME01 }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ vars.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}          

